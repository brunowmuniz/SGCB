package br.com.casabemestilo.model;

// Generated 24/05/2013 18:36:37 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.Null;

/**
 * Filial generated by hbm2java
 */
@Entity
@Table(name = "filial", catalog = "blankerc_sgcb")
public class Filial implements java.io.Serializable {

	private static final long serialVersionUID = 180790152795605071L;
	
	private Integer id;
	private String nome;
	private Boolean deleted;	
	private List<Filial> usuarioFiliais = new ArrayList<Filial>();
	private List<Oc> ocs = new ArrayList<Oc>();

	public Filial() {
	}

	public Filial(String nome) {
		this.nome = nome;
	}

	public Filial(String nome, Boolean deleted) {
		this.nome = nome;
		this.deleted = deleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "nome", nullable = false, length = 45)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "deleted")
	public Boolean getDeleted() {
		return this.deleted;
	}

	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}
	
	@OneToMany(targetEntity = UsuarioFilial.class, mappedBy = "filial", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	public List<Filial> getUsuarioFiliais() {
		return usuarioFiliais;
	}

	public void setUsuarioFiliais(List<Filial> usuarioFiliais) {
		this.usuarioFiliais = usuarioFiliais;
	}

	@OneToMany(targetEntity = Oc.class, mappedBy = "filial", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	public List<Oc> getOcs() {
		return ocs;
	}

	public void setOcs(List<Oc> ocs) {
		this.ocs = ocs;
	}
	
}
