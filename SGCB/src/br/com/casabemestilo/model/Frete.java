package br.com.casabemestilo.model;

// Generated 24/05/2013 18:36:37 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Frete generated by hbm2java
 */
@Entity
@Table(name = "frete")
public class Frete implements java.io.Serializable {

	
	private static final long serialVersionUID = 1L;

	private Integer id;
	
	private List<Ocproduto> ocprodutos;
	
	private Float valor;
	
	private Date datainicio;
	
	private Date datafim;
	
	private String observacoes;
	
	private List<ComissaoMontador> comissaoMontadores = new ArrayList<ComissaoMontador>();
	
	

	public Frete() {
	}

	public Frete(List<Ocproduto> ocprodutos, float valor,
			Date datainicio) {
		this.ocprodutos = ocprodutos;
		this.valor = valor;
		this.datainicio = datainicio;
	}

	public Frete(List<Ocproduto> ocprodutos, Float valor,
			Date datainicio, Date datafim, String observacoes) {
		this.ocprodutos = ocprodutos;
		this.valor = valor;
		this.datainicio = datainicio;
		this.datafim = datafim;
		this.observacoes = observacoes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@OneToMany(targetEntity = Ocproduto.class, mappedBy = "frete", fetch = FetchType.LAZY)
	public List<Ocproduto> getOcprodutos() {
		return this.ocprodutos;
	}

	public void setOcprodutos(List<Ocproduto> ocprodutos) {
		this.ocprodutos = ocprodutos;
	}

	@Column(name = "valor", nullable = false, precision = 7, scale = 2)
	public Float getValor() {
		return this.valor;
	}

	public void setValor(Float valor) {
		this.valor = valor;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datainicio", nullable = false, length = 10)
	public Date getDatainicio() {
		return this.datainicio;
	}

	public void setDatainicio(Date datainicio) {
		this.datainicio = datainicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "datafim", length = 10)
	public Date getDatafim() {
		return this.datafim;
	}

	public void setDatafim(Date datafim) {
		this.datafim = datafim;
	}

	@Column(name = "observacoes", length = 65535)
	public String getObservacoes() {
		return this.observacoes;
	}

	public void setObservacoes(String observacoes) {
		this.observacoes = observacoes;
	}

	@OneToMany(targetEntity = ComissaoMontador.class, mappedBy="freteMontagem", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	public List<ComissaoMontador> getComissaoMontadores() {
		return comissaoMontadores;
	}

	public void setComissaoMontadores(List<ComissaoMontador> comissaoMontadores) {
		this.comissaoMontadores = comissaoMontadores;
		for(ComissaoMontador comissaoMontador : comissaoMontadores){
			comissaoMontador.setFreteMontagem(this);
		}
		this.comissaoMontadores = comissaoMontadores;
	}
	
}
