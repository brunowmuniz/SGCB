package br.com.casabemestilo.model;

// Generated 24/05/2013 18:36:37 by Hibernate Tools 4.0.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Parcela generated by hbm2java
 */
@Entity
@Table(name = "parcela", catalog = "blankerc_sgcb")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class Parcela implements java.io.Serializable {

	
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Pagamento pagamento;
	private Date dataentrada;
	private float valor;
	private Integer numeroParcela;
	private String situacaoCheque;
	private String numeroCheque;
	private String statusCartao;
	private Boolean deleted;
	private Banco bancoDepositoCheque;
	private Date dataAntecipacao;

	public Parcela() {
	}

	public Parcela(Pagamento pagamento, Date dataentrada, float valor) {
		this.pagamento = pagamento;
		this.dataentrada = dataentrada;
		this.valor = valor;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne
	@JoinColumn(name = "pagamento", nullable = false)
	public Pagamento getPagamento() {
		return this.pagamento;
	}

	public void setPagamento(Pagamento pagamento) {
		this.pagamento = pagamento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dataentrada", nullable = false, length = 10)
	public Date getDataentrada() {
		return this.dataentrada;
	}

	public void setDataentrada(Date dataentrada) {
		this.dataentrada = dataentrada;
	}

	@Column(name = "valor", nullable = false, scale = 7, precision = 2)
	public float getValor() {
		return this.valor;
	}

	public void setValor(float valor) {
		this.valor = valor;
	}

	@Column(name = "numeroParcela", nullable = false)
	public Integer getNumeroParcela() {
		return numeroParcela;
	}

	public void setNumeroParcela(Integer numeroParcela) {
		this.numeroParcela = numeroParcela;
	}

	@Column(name = "situacaocheque", nullable = true)
	public String getSituacaoCheque() {
		return situacaoCheque;
	}

	public void setSituacaoCheque(String situacaoCheque) {
		this.situacaoCheque = situacaoCheque;
	}

	@Column(name = "numerocheque", nullable = true)
	public String getNumeroCheque() {
		return numeroCheque;
	}

	public void setNumeroCheque(String numeroCheque) {
		this.numeroCheque = numeroCheque;
	}

	@Column(name="deleted", nullable = false)
	public Boolean getDeleted() {
		if(deleted == null){
			deleted = false;
		}
		return deleted;
	}

	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}

	@Column(name = "statuscartao", nullable = true)
	public String getStatusCartao() {
		return statusCartao;
	}

	public void setStatusCartao(String statusCartao) {
		this.statusCartao = statusCartao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bancodepositocheque")
	public Banco getBancoDepositoCheque() {
		return bancoDepositoCheque;
	}

	public void setBancoDepositoCheque(Banco bancoDepositoCheque) {
		this.bancoDepositoCheque = bancoDepositoCheque;
	}

	@Column(name="dataantecipacao", nullable = true)
	@Temporal(TemporalType.TIMESTAMP)
	public Date getDataAntecipacao() {
		return dataAntecipacao;
	}

	public void setDataAntecipacao(Date dataAntecipacao) {
		this.dataAntecipacao = dataAntecipacao;
	}
	
	
}
