package br.com.casabemestilo.model;


import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.validation.constraints.Min;

/**
 * Ocproduto generated by hbm2java
 */
@Entity
@Table(name = "ocproduto", catalog = "gcb")
public class Ocproduto implements java.io.Serializable {

	private Integer id;
	private Status status;
	private Produto produto;
	private Oc oc;
	private String tiposaida;
	private Integer quantidade;
	private Float valorsugerido;
	private Float valorunitario;
	private Float valortotal;	
	private Set montagems = new HashSet(0);
	private Set fretes = new HashSet(0);
	private Set assistenciatecnicas = new HashSet(0);
	private List<ComissaoUsuario> comissaoUsuarios = new ArrayList<ComissaoUsuario>();

	public Ocproduto() {
	}

	public Ocproduto(Status status, Produto produto, Oc oc) {
		this.status = status;
		this.produto = produto;
		this.oc = oc;
	}

	public Ocproduto(Status status, Produto produto, Oc oc, String tiposaida,
			Set montagems, Set fretes, Set assistenciatecnicas, Integer quantidade) {
		this.status = status;
		this.produto = produto;
		this.oc = oc;
		this.tiposaida = tiposaida;
		this.montagems = montagems;
		this.fretes = fretes;
		this.assistenciatecnicas = assistenciatecnicas;
		this.quantidade = quantidade;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status", nullable = false)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "produto", nullable = false)
	public Produto getProduto() {
		if(this.produto == null){
			produto = new Produto();
		}
		return this.produto;
	}

	public void setProduto(Produto produto) {
		this.produto = produto;
	}

	@ManyToOne
	@JoinColumn(name = "oc", nullable = false)
	public Oc getOc() {
		return this.oc;
	}

	public void setOc(Oc oc) {
		this.oc = oc;
	}

	@Column(name = "tiposaida")
	public String getTiposaida() {
		return this.tiposaida;
	}

	public void setTiposaida(String tiposaida) {
		this.tiposaida = tiposaida;
	}

	@OneToMany(targetEntity = Montagem.class, mappedBy = "ocproduto")
	public Set getMontagems() {
		return this.montagems;
	}

	public void setMontagems(Set montagems) {
		this.montagems = montagems;
	}

	@OneToMany(targetEntity = Frete.class, mappedBy = "ocproduto")
	public Set getFretes() {
		return this.fretes;
	}

	public void setFretes(Set fretes) {
		this.fretes = fretes;
	}

	@OneToMany(targetEntity = Assistenciatecnica.class,mappedBy = "ocproduto")
	public Set getAssistenciatecnicas() {
		return this.assistenciatecnicas;
	}

	public void setAssistenciatecnicas(Set assistenciatecnicas) {
		this.assistenciatecnicas = assistenciatecnicas;
	}

	@OneToMany(targetEntity = ComissaoUsuario.class,mappedBy = "ocProduto")
	public List<ComissaoUsuario> getComissaoUsuarios() {
		return comissaoUsuarios;
	}

	public void setComissaoUsuarios(List<ComissaoUsuario> comissaoUsuarios) {
		this.comissaoUsuarios = comissaoUsuarios;
	}

	@Column(name = "quantidade", length = 3)
	@Min(value=1)
	public Integer getQuantidade() {
		if(quantidade == null){
			quantidade = 1;
		}
		return quantidade;
	}

	public void setQuantidade(Integer quantidade) {
		this.quantidade = quantidade;
	}
	
	@Column(name="valorsugerido", scale=6, precision=2)
	public Float getValorsugerido() {
		return valorsugerido;
	}
	
	public void setValorsugerido(Float valorsugerido) {
		this.valorsugerido = valorsugerido;
	}

	@Column(name="valorunitario", scale=6, precision=2)
	public Float getValorunitario() {
		if(valorunitario == null){
			valorunitario = new Float(0.00);
		}
		return valorunitario;
	}

	public void setValorunitario(Float valorunitario) {
		this.valorunitario = valorunitario;
	}

	@Column(name="valortotal", scale=6, precision=2)
	public Float getValortotal() {
		if(valortotal == null){
			valortotal = new Float(0.00);
		}
		return valortotal;
	}

	public void setValortotal(Float valortotal) {
		if(valortotal == 0.00 || this.valortotal != valortotal){
			this.valortotal = getValorunitario() * getQuantidade();
		}else{
			this.valortotal = valortotal;
		}
		
	}
	

}
